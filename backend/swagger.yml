openapi: 3.0.0
info:
  title: Celulou API
  description: API para um sistema de ecommerce simples
  version: "1.0"
servers:
  - url: http://localhost:3000/
    description: Servidor local para receber requisições como desenvolvedor

components:
  schemas:
    Cliente:
      type: object
      properties:
        codigoCliente:
          type: string
          example: "CAABBBCCCDDD"
          readOnly: true
        nomeCliente:
          type: string
          minLength: 1
          maxLength: 60
          example: "Victor Oliveira"
        cpfCliente:
          type: string
          example: "248.927.760-09"
          description: CPF do cliente (pode ser inserido com ou sem pontos e traços)
        celularCliente:
          type: string
          minLength: 10
          maxLength: 12
          example: "11956365632"
          description: Celular do cliente (somente números, sem pontos e traços) e deve conter de 10 a 12 caracteres
        emailCliente:
          type: string
          example: "victor@gmail.com"
          format: email
          description: Endereço de e-mail do cliente.
        createdAt:
          type: string
          format: date # or date-time
          description: Data e hora da criação do cliente.
          readOnly: true
      required:
        - nomeCliente
        - cpfCliente
        - celularCliente
        - emailCliente

    Endereco:
      type: object
      properties:
        codigoEndereco:
          type: string
          example: "EAABBBCCCDDD"
          readOnly: true
        nomeEndereco:
          type: string
          minLength: 1
          maxLength: 60
          example: "Casa"
        cep:
          type: string
          example: "12970-000"
          description: O CEP pode ser inserido com ou sem traço
        nomeRua:
          type: string
          minLength: 1
          maxLength: 60
          example: "Rua 1"
        numeroCasa:
          type: string
          minLength: 1
          maxLength: 10
          example: "11C"
        complemento:
          type: string
          maxLength: 60
          example: "Apartamento 14A"
        bairro:
          type: string
          minLength: 1
          maxLength: 60
          example: "Centro"
        cidade:
          type: string
          minLength: 1
          maxLength: 60
          example: "São José dos Campos"
        estado:
          type: string
          minLength: 1
          maxLength: 60
          example: "São Paulo"
        codigoCliente:
          type: string
          example: "CQWERTYUIQWE"
      required:
        - cep
        - nomeRua
        - numeroCasa
        - complemento
        - bairro
        - cidade
        - estado
        - codigoCliente

    Categoria:
      type: object
      properties:
        codigoCategoria:
          type: string
          example: "TAABBBCCCDDD"
          readOnly: true
        nomeCategoria:
          type: string
          minLength: 1
          example: "Basicos"
      required:
        - nomeCategoria

    Produto:
      type: object
      properties:
        codigoProduto:
          type: string
          example: "PAABBBCCCDDD"
          readOnly: true
        valor:
          type: number
          description: Valor do produto em Reais R$
          minimum: 0
          maximum: 99999999.99
          example: 22222222.22
        nomeProduto:
          type: string
          description: Nome do produto
          minLength: 1
          maxLength: 60
          example: "Samsung Galaxy A54"
        marca:
          type: string
          description: Nome da marca fabricante do produto
          minLength: 1
          maxLength: 60
          example: "Samsung"
        descricaoProduto:
          type: string
          description: Descrição detalhada do produto
          example: "Smartphone Samsung Galaxy A54 5G 128GB Tela 6.4'' Dual Chip 8GB RAM Branco Câmera Tripla de até 50MP Selfie 32MP"
        imagensFolder:
          type: string
          description: Endereço local onde as imagens do produto estão armazenadas
          example: "/produtos/PAABBBCCCDDD"
          readOnly: true
        nota:
          type: number
          description: Nota geral do produto com base nas avaliações atribuidas a ele
          nullable: true
          minimum: 0
          maximum: 5.00
          example: 4.98
          readOnly: true
        pesoGramas:
          type: number
          description: Peso em gramas do produto completo no envio (dispositivo, caixa e acessórios)
          minimum: 0
          maximum: 9999.99
          example: 2222.22
        alturaCM:
          type: number
          description: Altura em centímetros do produto a ser enviado
          minimum: 0
          maximum: 99.99
          example: 22.22
        larguraCM:
          type: number
          description: Largura em centímetros do produto a ser enviado
          minimum: 0
          maximum: 99.99
          example: 22.22
        comprimentoCM:
          type: number
          description: Comprimento em centímetros do produto a ser enviado
          minimum: 0
          maximum: 99.99
          example: 22.22
        isDisponivelCompra:
          type: boolean
          description: Mostra se um determinado produto está disponível para compras
          readOnly: true
        isVisivel:
          type: boolean
          description: Mostra se um determinado produto está disponível para ser exibido para todos os usuários do sistema
          readOnly: true
        categorias:
          type: array
          description: Lista de categorias que o produto tem
          items:
            $ref: "#/components/schemas/Categoria"
          readOnly: true
        quantidadeEstoque:
          type: number
          minimum: 0
          maximum: 999999
          example: 50
          readOnly: true

      required:
        - valor
        - nomeProduto
        - marca
        - descricaoProduto
        - pesoGramas
        - alturaCM
        - larguraCM
        - comprimentoCM
    
    Estoque:
      type: object
      properties:
        codigoEstoque:
          type: string
          example: "PAABBBCCCDDD"
          readOnly: true
        quantidade:
          type: number
          minimum: 0
          example: 50
        codigoProduto:
          type: string
          example: "PAABBBCCCDDD"

  responses:
    SucessoAlterar:
      description: Deu tudo certo!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Dados alterados com sucesso!"

    SucessoDeletar:
      description: Deu tudo certo!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Objeto deletado com sucesso!"

    Criado:
      description: Objeto criado com sucesso!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Item criado com sucesso!"

    Error400:
      description: Ocorreu um erro em um dos dados enviados
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: O valor precisa ser uma string!

    Error404:
      description: Algo não foi encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "O item não foi encontrado!"

    Error409:
      description: Algum dos dados apresentou conflito com o Servidor
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "O item já está cadastrado!"

    ErrorDefault:
      description: Erro inesperado!
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Unexpected Error!

paths:
  /clientes:
    post:
      summary: Cria um novo cliente.
      description: Essa rota é a responsável pela criação de um novo cliente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cliente"
      responses:
        "201":
          description: Cliente cadastrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cliente cadastrado com sucesso!"
                  codigoCliente:
                    type: string
                    example: "CAABBBCCCDDD"
              example:
                result:
                  message: "Cliente cadastrado com sucesso!"
                  codigoCliente: "Cd88lyitqgsr"
        "400":
          $ref: "#/components/responses/Error400"

        "409":
          $ref: "#/components/responses/Error409"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /clientes/{codigo}:
    get:
      summary: Busca um cliente pelo codigo
      description: Busca um cliente que possua um codigo identico ao da url
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        "200":
          description: Um objeto de cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Cliente"
              example:
                result:
                  codigoCliente: "Cdtoluifd7u7"
                  nomeCliente: "Victor"
                  cpfCliente: "15466379077"
                  celularCliente: "11965049540"
                  emailCliente: "victor1@gmail.com"
                  createdAt: "2024-04-02T13:38:38.453Z"

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

    put:
      summary: Altera dados de um cliente
      description: Altera os dados de um cliente com base no código passado pela url
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cliente"

      responses:
        "200":
          $ref: "#/components/responses/SucessoAlterar"

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        "409":
          $ref: "#/components/responses/Error409"

        default:
          $ref: "#/components/responses/ErrorDefault"

    delete:
      summary: Deleta um cliente
      description: Deleta um cliente do banco com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        "200":
          $ref: "#/components/responses/SucessoDeletar"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /clientes/{codigo}/enderecos/:
    post:
      summary: Cria um novo endereço
      description: Essa rota é a responsável pela criação de um novo endereço, atrelado a um cliente existente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Endereco"
      responses:
        "201":
          $ref: "#/components/responses/Criado"
        "400":
          $ref: "#/components/responses/Error400"
        "404":
          $ref: "#/components/responses/Error404"
        "409":
          $ref: "#/components/responses/Error409"
        default:
          $ref: "#/components/responses/ErrorDefault"
    get:
      summary: Busca todos os endereços de um cliente
      description: Essa rota é responsável por fazer a busca de todos os endereços cadastrados de um cliente em específico com base no seu codigo
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados e buscar os seus endereços
          required: true
      responses:
        "200":
          description: Um array com vários endereços
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Endereco"
              example:
                result:
                  [
                    {
                      "codigoEndereco": "Efw8lwgot8ql",
                      "nomeEndereco": "Casa 2",
                      "cep": "12970000",
                      "nomeRua": "Rua 2",
                      "numeroCasa": "34A",
                      "complemento": null,
                      "bairro": "Centro",
                      "cidade": "São Paulo",
                      "estado": "São Paulo",
                      "codigoCliente": "C87olwgom5yp",
                    },
                    {
                      "codigoEndereco": "E87olwgon4d2",
                      "nomeEndereco": "Casa",
                      "cep": "12970000",
                      "nomeRua": "Rua 2",
                      "numeroCasa": "34A",
                      "complemento": "",
                      "bairro": "Centro",
                      "cidade": "São Paulo",
                      "estado": "São Paulo",
                      "codigoCliente": "C87olwgom5yp",
                    },
                  ]

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"
  /enderecos/{codigo}:
    get:
      summary: Buscar endereço pelo código
      description: Busca um endereço específico com base no seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true

      responses:
        "200":
          description: Um objeto de endereço
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Endereco"

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

    put:
      summary: Atualiza dados de endereço
      description: Atualiza os dados de um endereço com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Endereco"
      responses:
        "200":
          $ref: "#/components/responses/SucessoAlterar"

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        "409":
          $ref: "#/components/responses/Error409"

        default:
          $ref: "#/components/responses/ErrorDefault"

    delete:
      summary: Deleta um endereço
      description: Deleta um endereço com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        "200":
          $ref: "#/components/responses/SucessoDeletar"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /categorias/:
    post:
      summary: Criar nova categoria
      description: Esta é uma rota para a criação de uma nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categoria"
      responses:
        "201":
          $ref: "#/components/responses/Criado"

        "400":
          $ref: "#/components/responses/Error400"

        "409":
          $ref: "#/components/responses/Error409"

        default:
          $ref: "#/components/responses/ErrorDefault"

    get:
      summary: Buscar todas as categorias
      description: Faz a busca de todas as categorias presentes no banco de dados
      responses:
        "200":
          description: Um array com várias categorias
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Categoria"
              example: 
                result: [
                  {
                    "codigoCategoria": "T54slyn337ex",
                    "nomeCategoria": "Intermediario Premium II"
                  },
                  {
                    "codigoCategoria": "T54slyn33b3t",
                    "nomeCategoria": "Memoria"
                  },
                  {
                    "codigoCategoria": "T54slyn33ece",
                    "nomeCategoria": "Camera"
                  }
                ]

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /categorias/{filtro}:
    get:
      summary: Buscar todos as categorias com base no filtro
      description: Filtra todas as categorias do banco com base no nome da categoria
      parameters:
        - in: path
          name: filtro
          schema:
            type: string
            description: Palavra ou parte de palavra para buscar as categorias
          required: true
      responses:
        "200":
          description: Devolve um array com as categorias encontradas
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Categoria"
              example:
                result: [
                  {
                    "codigoCategoria": "T54slyn337ex",
                    "nomeCategoria": "Intermediario Premium II"
                  },
                  {
                    "codigoCategoria": "T8e8lyn3mwbb",
                    "nomeCategoria": "Intermediario"
                  }
                ]

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /categorias/busca/{codigo}:
    get:
      summary: Busca uma categoria pelo codigo
      description: Recebe um codigo e busca a categoria correspondente no banco
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo da categoria (12 digitos) para buscá-la no banco de dadoss
          required: true
      responses:
        "200":
          description: Um objeto de categoria
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Categoria"
              example:
                "result": {
                  "codigoCategoria": "Teuwlyoj2xr0",
                  "nomeCategoria": "Intermediario"
                }
        
        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /categorias/{codigo}:
    put:
      summary: Editar dados de uma categoria pelo seu codigo
      description: Recebe o código de uma categoria pelo parametro e altera seus valores pelos valores enviados no body
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo da categoria (12 digitos) para buscá-la no banco de dados
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categoria"
      responses:
        "200":
          $ref: "#/components/responses/SucessoAlterar"

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

    delete:
      summary: Deleta uma categoria
      description: Deleta uma categoria com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo da categoria (12 digitos) para buscá-la no banco de dados
          required: true
      responses:
        "200":
          $ref: "#/components/responses/SucessoDeletar"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /produtos/:
    post:
      summary: Criar novo produto
      description: Esta é uma rota para a criação de um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                valor:
                  type: number
                  description: Valor do produto em Reais R$
                  minimum: 0
                  maximum: 99999999.99
                  example: 22222222.22
                nomeProduto:
                  type: string
                  description: Nome do produto
                  minLength: 1
                  maxLength: 60
                  example: "Samsung Galaxy A54"
                marca:
                  type: string
                  description: Nome da marca fabricante do produto
                  minLength: 1
                  maxLength: 60
                  example: "Samsung"
                descricaoProduto:
                  type: string
                  description: Descrição detalhada do produto
                  example: "Smartphone Samsung Galaxy A54 5G 128GB Tela 6.4'' Dual Chip 8GB RAM Branco Câmera Tripla de até 50MP Selfie 32MP"
                pesoGramas:
                  type: number
                  description: Peso em gramas do produto completo no envio (dispositivo, caixa e acessórios)
                  minimum: 0
                  maximum: 9999.99
                  example: 2222.22
                alturaCM:
                  type: number
                  description: Altura em centímetros do produto a ser enviado
                  minimum: 0
                  maximum: 99.99
                  example: 22.22
                larguraCM:
                  type: number
                  description: Largura em centímetros do produto a ser enviado
                  minimum: 0
                  maximum: 99.99
                  example: 22.22
                comprimentoCM:
                  type: number
                  description: Comprimento em centímetros do produto a ser enviado
                  minimum: 0
                  maximum: 99.99
                  example: 22.22
                categorias: 
                  type: array
                  items:
                    $ref: "#/components/schemas/Categoria"
                quantidadeEstoque:
                  type: number
                  description: Quantidade inicial do estoque do produto
                  minimum: 0
                  example: 500
            example:
              {
                "valor": 22222222.22,
                "nomeProduto": "Samsung Galaxy A54",
                "marca": "Samsung",
                "descricaoProduto": "Preto",
                "pesoGramas": 200.00,
                "alturaCM": 2.7,
                "larguraCM": 7.0,
                "comprimentoCM": 15.8,
                "categorias": [
                    {
                        "codigoCategoria": "Teuwlyoj2xr0",
                        "nomeCategoria": "Intermediario"
                    },
                    {
                        "codigoCategoria": "Teuwlyoj325s",
                        "nomeCategoria": "Memória"
                    }
                ],
                "quantidadeEstoque": 2
              }

      responses:
        "201":
          $ref: "#/components/responses/Criado"

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

    get:
      summary: Busca todos os produtos que contém uma lista de categorias especificas
      description: Esta rota recebe um array de categorias e devolve os produtos que possuem todas elas. Caso não envie nenhuma categoria, devolve todos os produtos do banco
      parameters:
        - in: query
          name: categorias
          description: Uma lista de categorias para filtrar os produtos por elas. Múltiplas categorias podem ser enviadas repetindo o parâmetro 'categorias'
          required: false
          schema:
            type: array
            items: 
              type: string
          example: 
            "/produtos?categorias=Ta5klzbczvf3&categorias=Ta5klzbcziie"
      responses:
        "200":
          description: Um array de produtos
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Produto"
              example:
                "result": [
                    {
                        "codigoProduto": "Pa5klzbd0sev",
                        "valor": 22222222.22,
                        "nomeProduto": "Samsung Galaxy S24",
                        "marca": "Samsung",
                        "descricaoProduto": "Preto",
                        "imagensFolder": "/produtos/Pa5klzbd0sev/",
                        "nota": null,
                        "pesoGramas": 200,
                        "larguraCM": 7,
                        "alturaCM": 2.7,
                        "comprimentoCM": 15.8,
                        "isDisponivelCompra": false,
                        "isVisivel": false,
                        "categorias": [
                            {
                                "codigoCategoria": "Ta5klzbczvf3",
                                "nomeCategoria": "Intermediario"
                            },
                            {
                                "codigoCategoria": "Ta5klzbcziie",
                                "nomeCategoria": "Memoria"
                            }
                        ],
                        "quantidadeEstoque": 50
                    }
                ]
        
        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /produtos/{codigo}:
    get:
      summary: Buscar um produto pelo código
      description: Esta rota recebe um código nos parâmetros da requisição e busca o produto que possui este código
      parameters:
        - in: path
          name: codigo
          description: O código é uma string de 12 caracteres
          schema:
            type: string
            description: Codigo do produto (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        "200":
          description: Um objeto de produto
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Produto"

              example:
                "result": {
                  "codigoProduto": "Pa5klzbd0sev",
                  "valor": 22222222.22,
                  "nomeProduto": "Samsung Galaxy S24",
                  "marca": "Samsung",
                  "descricaoProduto": "Preto",
                  "imagensFolder": "/produtos/Pa5klzbd0sev/",
                  "nota": null,
                  "pesoGramas": 200,
                  "larguraCM": 7,
                  "alturaCM": 2.7,
                  "comprimentoCM": 15.8,
                  "isDisponivelCompra": false,
                  "isVisivel": false,
                  "categorias": [
                      {
                          "codigoCategoria": "Ta5klzbczvf3",
                          "nomeCategoria": "Intermediario"
                      },
                      {
                          "codigoCategoria": "Ta5klzbcziie",
                          "nomeCategoria": "Memoria"
                      }
                  ],
                  "quantidadeEstoque": 50
                }
        
        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"
          
    put:
      summary: Atualizar dados de um produto
      description: Esta rota recebe um codigo e os dados do produto a ser atualizado (incluindo categorias)
      parameters:
        - in: path
          name: codigo
          description: O código é uma string de 12 caracteres
          schema:
            type: string
            description: Código do produto (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                valor:
                  type: number
                  description: Valor do produto em Reais R$
                  minimum: 0
                  maximum: 99999999.99
                  example: 22222222.22
                nomeProduto:
                  type: string
                  description: Nome do produto
                  minLength: 1
                  maxLength: 60
                  example: "Samsung Galaxy A54"
                marca:
                  type: string
                  description: Nome da marca fabricante do produto
                  minLength: 1
                  maxLength: 60
                  example: "Samsung"
                descricaoProduto:
                  type: string
                  description: Descrição detalhada do produto
                  example: "Smartphone Samsung Galaxy A54 5G 128GB Tela 6.4'' Dual Chip 8GB RAM Branco Câmera Tripla de até 50MP Selfie 32MP"
                pesoGramas:
                  type: number
                  description: Peso em gramas do produto completo no envio (dispositivo, caixa e acessórios)
                  minimum: 0
                  maximum: 9999.99
                  example: 2222.22
                alturaCM:
                  type: number
                  description: Altura em centímetros do produto a ser enviado
                  minimum: 0
                  maximum: 99.99
                  example: 22.22
                larguraCM:
                  type: number
                  description: Largura em centímetros do produto a ser enviado
                  minimum: 0
                  maximum: 99.99
                  example: 22.22
                comprimentoCM:
                  type: number
                  description: Comprimento em centímetros do produto a ser enviado
                  minimum: 0
                  maximum: 99.99
                  example: 22.22
                categorias: 
                  type: array
                  items:
                    $ref: "#/components/schemas/Categoria"
            example:
              {
                "valor": 22222222.22,
                "nomeProduto": "Samsung Galaxy A54",
                "marca": "Samsung",
                "descricaoProduto": "Preto",
                "pesoGramas": 200.00,
                "alturaCM": 2.7,
                "larguraCM": 7.0,
                "comprimentoCM": 15.8,
                "categorias": [
                    {
                        "codigoCategoria": "Teuwlyoj2xr0",
                        "nomeCategoria": "Intermediario"
                    },
                    {
                        "codigoCategoria": "Teuwlyoj325s",
                        "nomeCategoria": "Memória"
                    }
                ]
              }
      responses:
        "200":
          $ref: "#/components/responses/SucessoAlterar"

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /produtos/{codigo}/categorias:
    get:
      summary: Busca todas as categorias de um produto
      description: Esta rota recebe o código de um produto e busca no banco todas as categorias relacionadas ao produto
      parameters:
        - in: path
          name: codigo
          description: O código é uma string de 12 caracteres
          schema:
            type: string
            description: Código do produto (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        "200":
          description: Um array de categorias
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Categoria"
              example:
                result: [
                  {
                    "codigoCategoria": "T54slyn33ece",
                    "nomeCategoria": "Camera"
                  },
                  {
                    "codigoCategoria": "T54slyn33b3t",
                    "nomeCategoria": "Memoria"
                  }
                ]
        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"
        
        default: 
          $ref: "#/components/responses/ErrorDefault"

  /produtos/{codigo}/visibilidade:
    put:
      summary: Altera a visibilidade de um produto
      description: Esta rota recebe um codigo e um valor de visibilidade para alterar a visibilidade do produto
      parameters:
        - in: path
          name: codigo
          description: O código é uma string de 12 caracteres
          schema:
            type: string
            description: Código do produto (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isVisible:
                  type: boolean
                  example: true

      responses:
        "200":
          $ref: "#/components/responses/SucessoAlterar"

        "204":
          description: A visibilidade não foi alterada porque o produto já tem a visibilidade desejada

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        "500":
          $ref: "#/components/responses/ErrorDefault"

  /produtos/{codigo}/disponibilidade/:
    put:
      summary: Altera a disponibilidade de um produto
      description: Esta rota recebe um boolean que determina se o produto está ou não disponível para compra
      parameters:
        - in: path
          name: codigo
          description: O código é uma string de 12 caracteres
          schema:
            type: string
            description: Código do produto (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isDisponivelCompra:
                  type: boolean
                  example: true
      responses:
        "200":
          $ref: "#/components/responses/SucessoAlterar"

        "204":
          description: A disponibilidade do produto não foi alterada porque o produto já tem a disponibilidade desejada

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        "500":
          $ref: "#/components/responses/ErrorDefault"

  /produtos/{codigo}/upload:
    post:
      summary: Fazer upload das imagens do produto
      description: Esta rota é a responsavel por receber até 4 imagens que serão exibidas na tela do produto. Esta rota pode ser usada para atualizar as imagens também.
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
          description: Código do produto que receberá as imagens
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto-1:
                  type: string
                  format: binary
                  description: Primeira imagem (formato PNG, JPG ou JPEG)
                foto-2:
                  type: string
                  format: binary
                  description: Segunda imagem (formado PNG, JPG ou JPEG)
                foto-3:
                  type: string
                  format: binary
                  description: Terceira imagem (formato PNG, JPG ou JPEG)
                foto-4:
                  type: string
                  format: binary
                  description: Quarta imagem (formato PNG, JPG ou JPEG)
      responses:
        "200":
          description: Imagens salvas com sucesso!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Imagens salvas com sucesso!

        "400":
          description: Algum dos dados é inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro durante upload: campo inexperado!"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /produtos/{codigo}/estoques:
    patch:
      summary: Altera o estoque de um produto
      description: Esta rota recebe o codigo de um produto e um valor de alteração, podendo ser negativo (retiradas) ou positivo (adições)
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
          description: Código do produto que terá o estoque alterado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                valorAlteracao:
                  type: number
                  not:
                    enum: [0]
                  example: -5
                  description: O valor de alteração pode ser positivo ou negativo, mas não zero
      responses:
        "200":
          description: Devolve uma mensagem de sucesso e os dados do estoque alterado
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Estoque alterado com sucesso!"
                      codigoEstoque:
                        type: string
                        example: "FAABBBCCCDDD"
                      codigoProduto:
                        type: string
                        example: "PAABBBCCCDDD"
              example:
                "result": {
                  "message": "Estoque alterado com sucesso!",
                  "codigoEstoque": "Fejslyonbbv0",
                  "codigoProduto": "Pejslyonbbtg",
                  "quantidade": 10
                }

        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /estoques/{codigo}:
    get:
      summary: Buscar estoque pelo código
      description: Esta rota recebe o código do estoque e o busca no banco de dados
      parameters:
        - in: path
          name: codigo
          description: O código é uma string de 12 caracteres
          schema:
            type: string
            description: Codigo do estoque (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        "200":
          description: Um objeto de estoque
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Estoque"
              example:
                "result": {
                  "codigoEstoque": "Fejslyonbbv0",
                  "codigoProduto": "Pejslyonbbtg",
                  "quantidade": 2
                }
        
        "400":
          $ref: "#/components/responses/Error400"

        "404":
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"