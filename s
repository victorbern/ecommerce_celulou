[1mdiff --git a/backend/src/repositories/implementations/PostgresEstoquesRepository.ts b/backend/src/repositories/implementations/PostgresEstoquesRepository.ts[m
[1mindex 7fb0bf3..0965389 100644[m
[1m--- a/backend/src/repositories/implementations/PostgresEstoquesRepository.ts[m
[1m+++ b/backend/src/repositories/implementations/PostgresEstoquesRepository.ts[m
[36m@@ -32,7 +32,7 @@[m [mexport class PostgresEstoquesRepository implements IEstoquesRepository {[m
     }[m
 [m
     async alterarEstoque(codigoEstoque: string, valorAlteracao: number): Promise<void> {[m
[31m-        await this.prisma.estoque.update({[m
[32m+[m[32m        await prisma.estoque.update({[m
             where: {[m
                 codigoEstoque: codigoEstoque,[m
             },[m
[1mdiff --git a/backend/src/repositories/in-memory/InMemoryAlteracaoEstoqueRepository.ts b/backend/src/repositories/in-memory/InMemoryAlteracaoEstoqueRepository.ts[m
[1mdeleted file mode 100644[m
[1mindex c60eddf..0000000[m
[1m--- a/backend/src/repositories/in-memory/InMemoryAlteracaoEstoqueRepository.ts[m
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-import { AlteracaoEstoque } from "../../entities/AlteracaoEstoque";[m
[31m-import { IAlteracaoEstoqueRepository } from "../IAlteracaoEstoqueRepository";[m
[31m-[m
[31m-export class InMemoryAlteracaoEstoqueRepository implements IAlteracaoEstoqueRepository {[m
[31m-    public items: AlteracaoEstoque[] = [[m
[31m-        {[m
[31m-            codigoAlteracaoEstoque: "GAABBBCCCDDD",[m
[31m-            valorAlteracao: 20,[m
[31m-            dataAlteracao: new Date(Date.now()),[m
[31m-            codigoEstoque: "FAABBBCCCDDD"[m
[31m-        }[m
[31m-    ][m
[31m-[m
[31m-    async save(alteracaoEstoque: AlteracaoEstoque): Promise<void> {[m
[31m-        this.items.push(alteracaoEstoque);[m
[31m-    }[m
[31m-    async getByCodigo(codigoAlteracaoEstoque: string): Promise<AlteracaoEstoque> {[m
[31m-        for (let i in this.items) {[m
[31m-            if (this.items[i].codigoAlteracaoEstoque === codigoAlteracaoEstoque) {[m
[31m-                return this.items[i];[m
[31m-            }[m
[31m-        }[m
[31m-        return null;[m
[31m-    }[m
[31m-[m
[31m-    async delete(codigoAlteracaoEstoque: string): Promise<void> {[m
[31m-        for (let i = 0; i < this.items.length; i++) {[m
[31m-            if (this.items[i].codigoAlteracaoEstoque === codigoAlteracaoEstoque) {[m
[31m-                this.items.splice(i, 1);[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-    [m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/backend/src/repositories/in-memory/InMemoryCategoriasRepository.ts b/backend/src/repositories/in-memory/InMemoryCategoriasRepository.ts[m
[1mdeleted file mode 100644[m
[1mindex 8964572..0000000[m
[1m--- a/backend/src/repositories/in-memory/InMemoryCategoriasRepository.ts[m
[1m+++ /dev/null[m
[36m@@ -1,97 +0,0 @@[m
[31m-import { ProdutoHasCategoria } from "@prisma/client";[m
[31m-import { Categoria } from "../../entities/Categoria";[m
[31m-import { ICategoriasRepository } from "../ICategoriasRepository";[m
[31m-[m
[31m-export class InMemoryCategoriasRepository implements ICategoriasRepository {[m
[31m-    public items: Categoria[] = [[m
[31m-        {[m
[31m-            codigoCategoria: "TASAAASSSDDD",[m
[31m-            nomeCategoria: "Intermediario"[m
[31m-        }[m
[31m-    ][m
[31m-[m
[31m-    private produtoHasCategoriaBanco: ProdutoHasCategoria[] = [][m
[31m-[m
[31m-    setProdutoHasCategoriaBanco(produtoHasCategoriaList: ProdutoHasCategoria[]) {[m
[31m-        this.produtoHasCategoriaBanco = produtoHasCategoriaList;[m
[31m-    }[m
[31m-[m
[31m-    async getByName(nomeCategoria: string): Promise<Categoria> {[m
[31m-        for (let i in this.items) {[m
[31m-            if (this.items[i].nomeCategoria == nomeCategoria) {[m
[31m-                return this.items[i];[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    as